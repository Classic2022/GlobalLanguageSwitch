// Replace the existing handleSubmit function in contact-section.tsx with this code
// This will make the form work with the PHP handler instead of the Node.js API

const handleSubmit = async (e: React.FormEvent) => {
  e.preventDefault()
  
  // Reset status
  setSubmitStatus('idle')
  setStatusMessage("")
  
  // Create FormData object for PHP submission
  const formData = new FormData()
  
  // Add form fields to FormData
  formData.append('name', nameRef.current?.value || "")
  formData.append('email', emailRef.current?.value || "")
  formData.append('phone', phoneRef.current?.value || "")
  formData.append('message', messageRef.current?.value || "")
  
  // Add selected services to FormData
  if (repairsRef.current?.checked) formData.append('services[]', language === "de" ? "Reparaturen" : "Repairs")
  if (locksmithRef.current?.checked) formData.append('services[]', language === "de" ? "Schlüsseldienst" : "Locksmith")
  if (transportRef.current?.checked) formData.append('services[]', language === "de" ? "Transporte" : "Transport")
  if (assemblyRef.current?.checked) formData.append('services[]', language === "de" ? "Möbelaufbau" : "Assembly")
  
  // Validate required fields
  if (!nameRef.current?.value || !emailRef.current?.value || !messageRef.current?.value) {
    setSubmitStatus('error')
    setStatusMessage(language === "de" 
      ? "Bitte füllen Sie alle erforderlichen Felder aus."
      : "Please fill in all required fields.")
    return
  }
  
  try {
    setIsSubmitting(true)
    
    // Submit to PHP handler
    const response = await fetch('/form-handler.php', {
      method: 'POST',
      body: formData
    })
    
    if (!response.ok) {
      throw new Error(`HTTP error! Status: ${response.status}`)
    }
    
    const data = await response.json()
    
    if (data.success) {
      setSubmitStatus('success')
      setStatusMessage(language === "de" 
        ? "Vielen Dank für Ihre Nachricht. Wir werden uns in Kürze mit Ihnen in Verbindung setzen."
        : "Thank you for your message. We will contact you shortly.")
      resetForm()
    } else {
      setSubmitStatus('error')
      setStatusMessage(data.message || (language === "de"
        ? "Es gab ein Problem beim Senden Ihrer Nachricht. Bitte versuchen Sie es später erneut."
        : "There was a problem sending your message. Please try again later."))
    }
  } catch (error) {
    console.error('Form submission error:', error)
    setSubmitStatus('error')
    setStatusMessage(language === "de"
      ? "Es gab ein Problem beim Senden Ihrer Nachricht. Bitte versuchen Sie es später erneut."
      : "There was a problem sending your message. Please try again later.")
  } finally {
    setIsSubmitting(false)
  }
}